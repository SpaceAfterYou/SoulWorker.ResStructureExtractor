using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace SoulWorker.ResStructureExtractor.Test;

[TestClass]
public sealed class TestExtract
{
    [TestMethod]
    public void FromUnpackedTest()
    {
        var results = Extract.FromUnpacked(@"Data\SoulWorker_dump.exe");
        
        Assert.IsTrue(results.ContainsKey("tb_Achievement"));
        Assert.IsTrue(results.ContainsKey("tb_Achievement_begin"));
        Assert.IsTrue(results.ContainsKey("tb_Achievement_Emblem"));
        Assert.IsTrue(results.ContainsKey("tb_Achievement_Script"));
        Assert.IsTrue(results.ContainsKey("tb_Akashic_Combination"));
        Assert.IsTrue(results.ContainsKey("tb_Akashic_Disassemble"));
        Assert.IsTrue(results.ContainsKey("tb_Akashic_Make"));
        Assert.IsTrue(results.ContainsKey("tb_Akashic_Parts"));
        Assert.IsTrue(results.ContainsKey("tb_Akashic_Records"));
        Assert.IsTrue(results.ContainsKey("Tb_Akashic_Slot_Extend"));
        Assert.IsTrue(results.ContainsKey("tb_Appearance"));
        Assert.IsTrue(results.ContainsKey("tb_ApplyChallenge"));
        Assert.IsTrue(results.ContainsKey("tb_Aura"));
        Assert.IsTrue(results.ContainsKey("tb_Bank_Slot_Extend"));
        Assert.IsTrue(results.ContainsKey("tb_Battle_Arena_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Booster"));
        Assert.IsTrue(results.ContainsKey("tb_Booster_Script"));
        Assert.IsTrue(results.ContainsKey("TB_BroachData"));
        Assert.IsTrue(results.ContainsKey("Tb_Broach_Set"));
        Assert.IsTrue(results.ContainsKey("tb_broach_set_book"));
        Assert.IsTrue(results.ContainsKey("tb_broach_Simulator"));
        Assert.IsTrue(results.ContainsKey("tb_Buff"));
        Assert.IsTrue(results.ContainsKey("tb_Buff_Script"));
        Assert.IsTrue(results.ContainsKey("tb_CashBilling_Info"));
        Assert.IsTrue(results.ContainsKey("tb_CashShop"));
        Assert.IsTrue(results.ContainsKey("tb_CashShop_Charge"));
        Assert.IsTrue(results.ContainsKey("tb_ChallengeOption"));
        Assert.IsTrue(results.ContainsKey("tb_Change_Mob_ID"));
        Assert.IsTrue(results.ContainsKey("tb_change_tab"));
        Assert.IsTrue(results.ContainsKey("tb_Channel_Global"));
        Assert.IsTrue(results.ContainsKey("tb_Character_Background"));
        Assert.IsTrue(results.ContainsKey("tb_Character_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Character_Parts"));
        Assert.IsTrue(results.ContainsKey("tb_ChattingCommand"));
        Assert.IsTrue(results.ContainsKey("tb_ChattingFilter"));
        Assert.IsTrue(results.ContainsKey("tb_Check_Access_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Check_Attendance_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Check_Attendance_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Check_Attendance_Streak"));
        Assert.IsTrue(results.ContainsKey("tb_Cinema_String"));
        Assert.IsTrue(results.ContainsKey("tb_Class_form"));
        Assert.IsTrue(results.ContainsKey("tb_Class_Speech"));
        Assert.IsTrue(results.ContainsKey("tb_Class_Speech_2"));
        Assert.IsTrue(results.ContainsKey("tb_ClassBattle_Role"));
        Assert.IsTrue(results.ContainsKey("tb_ClassSelect_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Color"));
        Assert.IsTrue(results.ContainsKey("tb_Combo_Buff"));
        Assert.IsTrue(results.ContainsKey("tb_Common"));
        Assert.IsTrue(results.ContainsKey("tb_ControlKeyInfo"));
        Assert.IsTrue(results.ContainsKey("tb_Costume_Extraction"));
        Assert.IsTrue(results.ContainsKey("tb_Costume_Socket"));
        Assert.IsTrue(results.ContainsKey("tb_Create_Cloth"));
        Assert.IsTrue(results.ContainsKey("tb_CreateOption"));
        Assert.IsTrue(results.ContainsKey("tb_Credit_Raise"));
        Assert.IsTrue(results.ContainsKey("tb_Cultivation"));
        Assert.IsTrue(results.ContainsKey("tb_Customer_Benefit"));
        Assert.IsTrue(results.ContainsKey("tb_Customer_Grade"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_Eyes"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_Hair"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_Skin"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_View_Ani"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_View_Costume"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_View_Sound"));
        Assert.IsTrue(results.ContainsKey("tb_Customize_View_Weapon"));
        Assert.IsTrue(results.ContainsKey("tb_Cutscene_String"));
        Assert.IsTrue(results.ContainsKey("tb_Daily_Mission"));
        Assert.IsTrue(results.ContainsKey("tb_DailyMaze_Portal"));
        Assert.IsTrue(results.ContainsKey("tb_Deck_Bonus"));
        Assert.IsTrue(results.ContainsKey("tb_Def_Attack"));
        Assert.IsTrue(results.ContainsKey("tb_Defensive_Weapon"));
        Assert.IsTrue(results.ContainsKey("tb_Dice_Episode"));
        Assert.IsTrue(results.ContainsKey("tb_Dice_Event"));
        Assert.IsTrue(results.ContainsKey("tb_Dice_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Disassemble"));
        Assert.IsTrue(results.ContainsKey("tb_district"));
        Assert.IsTrue(results.ContainsKey("tb_District_Transport"));
        Assert.IsTrue(results.ContainsKey("tb_Divergence"));
        Assert.IsTrue(results.ContainsKey("Tb_Drop_Symbol"));
        Assert.IsTrue(results.ContainsKey("tb_DS_Point"));
        Assert.IsTrue(results.ContainsKey("tb_Dye"));
        Assert.IsTrue(results.ContainsKey("tb_Dye_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Echelon"));
        Assert.IsTrue(results.ContainsKey("tb_Equalizer_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Equalizer_Summon"));
        Assert.IsTrue(results.ContainsKey("tb_Event_Condition"));
        Assert.IsTrue(results.ContainsKey("tb_Faction"));
        Assert.IsTrue(results.ContainsKey("tb_Fragment_Exchange"));
        Assert.IsTrue(results.ContainsKey("tb_Fragment_Extraction"));
        Assert.IsTrue(results.ContainsKey("tb_FX_BattleMaterial_Link"));
        Assert.IsTrue(results.ContainsKey("tb_Gesture"));
        Assert.IsTrue(results.ContainsKey("tb_Gesture_Slot_Extend"));
        Assert.IsTrue(results.ContainsKey("tb_Help"));
        Assert.IsTrue(results.ContainsKey("tb_Help_PopUp"));
        Assert.IsTrue(results.ContainsKey("tb_Helper"));
        Assert.IsTrue(results.ContainsKey("tb_Helper_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Hidden_Event"));
        Assert.IsTrue(results.ContainsKey("tb_HitVFX"));
        Assert.IsTrue(results.ContainsKey("tb_Infinite_Tower"));
        Assert.IsTrue(results.ContainsKey("tb_Infinite_Tower_Monster"));
        Assert.IsTrue(results.ContainsKey("tb_Interaction_Item"));
        Assert.IsTrue(results.ContainsKey("tb_Interaction_Object"));
        Assert.IsTrue(results.ContainsKey("tb_Inven_Slot_Extend"));
        Assert.IsTrue(results.ContainsKey("tb_Item"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Classify"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Classreward_Link"));
        Assert.IsTrue(results.ContainsKey("tb_Item_CostumeSet"));
        Assert.IsTrue(results.ContainsKey("tb_Item_CountBox"));
        Assert.IsTrue(results.ContainsKey("tb_Item_CountBox_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Evolution"));
        Assert.IsTrue(results.ContainsKey("tb_item_extraction"));
        Assert.IsTrue(results.ContainsKey("tb_item_information"));
        Assert.IsTrue(results.ContainsKey("tb_item_model"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Package"));
        Assert.IsTrue(results.ContainsKey("tb_Item_RandomBox"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Repair"));
        Assert.IsTrue(results.ContainsKey("tb_item_script"));
        Assert.IsTrue(results.ContainsKey("tb_Item_SetItem"));
        Assert.IsTrue(results.ContainsKey("tb_item_SimilarGroup"));
        Assert.IsTrue(results.ContainsKey("tb_Item_SubModel"));
        Assert.IsTrue(results.ContainsKey("tb_item_title"));
        Assert.IsTrue(results.ContainsKey("tb_Item_Title_Change"));
        Assert.IsTrue(results.ContainsKey("tb_item_Title_Group"));
        Assert.IsTrue(results.ContainsKey("tb_item_Title_Value"));
        Assert.IsTrue(results.ContainsKey("tb_League_Attendance"));
        Assert.IsTrue(results.ContainsKey("tb_League_Info"));
        Assert.IsTrue(results.ContainsKey("tb_League_Mark"));
        Assert.IsTrue(results.ContainsKey("tb_League_Raid"));
        Assert.IsTrue(results.ContainsKey("tb_League_Skill"));
        Assert.IsTrue(results.ContainsKey("tb_LeagueSkill_Script"));
        Assert.IsTrue(results.ContainsKey("tb_Levelup_Point"));
        Assert.IsTrue(results.ContainsKey("tb_Loading"));
        Assert.IsTrue(results.ContainsKey("tb_Loading_Img"));
        Assert.IsTrue(results.ContainsKey("tb_Loading_String"));
        Assert.IsTrue(results.ContainsKey("tb_Make"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_Enter_Count_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_Open_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_OpenControl"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_Portal"));
        Assert.IsTrue(results.ContainsKey("tb_Maze_Select"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_Difficulty"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_GoldDirect"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_Level"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_Normal"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_PartyValue"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_Rank"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_SoulVaper"));
        Assert.IsTrue(results.ContainsKey("tb_MazeReward_Time"));
        Assert.IsTrue(results.ContainsKey("tb_MessageNotifyer"));
        Assert.IsTrue(results.ContainsKey("tb_Mileage"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_BI_Sector_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_BI_Skill_Edit"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_BI_Upgrade"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_CardMatch_Card"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_CardMatch_Faction"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_CardMatch_Rule"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_District6"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_District6_Date"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_Operation"));
        Assert.IsTrue(results.ContainsKey("tb_Mode_Resources"));
        Assert.IsTrue(results.ContainsKey("tb_Monster"));
        Assert.IsTrue(results.ContainsKey("tb_Monster_Broken_Parts"));
        Assert.IsTrue(results.ContainsKey("tb_Monster_Parts"));
        Assert.IsTrue(results.ContainsKey("tb_Monster_RimLight"));
        Assert.IsTrue(results.ContainsKey("tb_Monster_script"));
        Assert.IsTrue(results.ContainsKey("tb_Monster_Weapon"));
        Assert.IsTrue(results.ContainsKey("tb_Myroom_Default"));
        Assert.IsTrue(results.ContainsKey("tb_Myroom_Furniture"));
        Assert.IsTrue(results.ContainsKey("tb_Myroom_Greed"));
        Assert.IsTrue(results.ContainsKey("tb_Myroom_Info"));
        Assert.IsTrue(results.ContainsKey("tb_NameFilter"));
        Assert.IsTrue(results.ContainsKey("tb_Navigation_Warpmap"));
        Assert.IsTrue(results.ContainsKey("tb_Notice"));
        Assert.IsTrue(results.ContainsKey("tb_NPC"));
        Assert.IsTrue(results.ContainsKey("tb_NPC_Parts"));
        Assert.IsTrue(results.ContainsKey("tb_NPC_Script"));
        Assert.IsTrue(results.ContainsKey("tb_Operation_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Option_String"));
        Assert.IsTrue(results.ContainsKey("tb_PartyRevise"));
        Assert.IsTrue(results.ContainsKey("tb_Pass_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Pass_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_PC_Akashic"));
        Assert.IsTrue(results.ContainsKey("tb_PC_Costume"));
        Assert.IsTrue(results.ContainsKey("tb_PC_Reward_System"));
        Assert.IsTrue(results.ContainsKey("tb_PC_Reward_System_Month"));
        Assert.IsTrue(results.ContainsKey("tb_Photo_Item"));
        Assert.IsTrue(results.ContainsKey("tb_PLUS_System"));
        Assert.IsTrue(results.ContainsKey("tb_Pollen"));
        Assert.IsTrue(results.ContainsKey("tb_PreSet"));
        Assert.IsTrue(results.ContainsKey("tb_PvP_levelup_Point"));
        Assert.IsTrue(results.ContainsKey("tb_PvP_Limit"));
        Assert.IsTrue(results.ContainsKey("tb_PVP_Revise"));
        Assert.IsTrue(results.ContainsKey("tb_PVP_Revise_NI"));
        Assert.IsTrue(results.ContainsKey("tb_PvP_Role"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Chapter"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Condition"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Episode"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Script"));
        Assert.IsTrue(results.ContainsKey("tb_Quest_Season"));
        Assert.IsTrue(results.ContainsKey("tb_Random_Change"));
        Assert.IsTrue(results.ContainsKey("tb_Random_Get"));
        Assert.IsTrue(results.ContainsKey("tb_Random_Get_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Random_Option"));
        Assert.IsTrue(results.ContainsKey("tb_Rank_Category_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Rank_Change"));
        Assert.IsTrue(results.ContainsKey("tb_Rank_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Rank_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Rank_Reward_Totalpoint"));
        Assert.IsTrue(results.ContainsKey("tb_Reinforce"));
        Assert.IsTrue(results.ContainsKey("tb_Reinforce_Exchange"));
        Assert.IsTrue(results.ContainsKey("tb_Reinforce_Option"));
        Assert.IsTrue(results.ContainsKey("tb_RepackageCostume"));
        Assert.IsTrue(results.ContainsKey("tb_ResVFX"));
        Assert.IsTrue(results.ContainsKey("tb_RoomRank_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_RSP_Event"));
        Assert.IsTrue(results.ContainsKey("tb_Select_Item"));
        Assert.IsTrue(results.ContainsKey("tb_SFX_BattleMaterial"));
        Assert.IsTrue(results.ContainsKey("tb_SFX_GroundMaterial"));
        Assert.IsTrue(results.ContainsKey("tb_Shop"));
        Assert.IsTrue(results.ContainsKey("tb_Shop_String"));
        Assert.IsTrue(results.ContainsKey("tb_Skill"));
        Assert.IsTrue(results.ContainsKey("tb_Skill_Action"));
        Assert.IsTrue(results.ContainsKey("tb_Skill_Divide"));
        Assert.IsTrue(results.ContainsKey("tb_Skill_Option"));
        Assert.IsTrue(results.ContainsKey("tb_Skill_Script"));
        Assert.IsTrue(results.ContainsKey("Tb_Skill_Slot_Extend"));
        Assert.IsTrue(results.ContainsKey("tb_Social_Item"));
        Assert.IsTrue(results.ContainsKey("tb_Social_Motion"));
        Assert.IsTrue(results.ContainsKey("tb_Socket"));
        Assert.IsTrue(results.ContainsKey("tb_Soul_Guage"));
        Assert.IsTrue(results.ContainsKey("tb_soul_metry"));
        Assert.IsTrue(results.ContainsKey("tb_soul_metry_string"));
        Assert.IsTrue(results.ContainsKey("tb_SoulStone_LevelUp"));
        Assert.IsTrue(results.ContainsKey("tb_SpecialMaze_Open"));
        Assert.IsTrue(results.ContainsKey("tb_Speech"));
        Assert.IsTrue(results.ContainsKey("tb_Speech_String"));
        Assert.IsTrue(results.ContainsKey("tb_Speech_tag"));
        Assert.IsTrue(results.ContainsKey("tb_Statistics"));
        Assert.IsTrue(results.ContainsKey("tb_Status"));
        Assert.IsTrue(results.ContainsKey("tb_SubWeapon"));
        Assert.IsTrue(results.ContainsKey("tb_SystemMail"));
        Assert.IsTrue(results.ContainsKey("tb_Talk"));
        Assert.IsTrue(results.ContainsKey("tb_Talk_List"));
        Assert.IsTrue(results.ContainsKey("tb_Talk_String"));
        Assert.IsTrue(results.ContainsKey("tb_Time"));
        Assert.IsTrue(results.ContainsKey("tb_Title_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Title_Reward"));
        Assert.IsTrue(results.ContainsKey("tb_Title_String"));
        Assert.IsTrue(results.ContainsKey("tb_Tooltip_String"));
        Assert.IsTrue(results.ContainsKey("tb_Transfer"));
        Assert.IsTrue(results.ContainsKey("tb_Transfer_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Transport_Info"));
        Assert.IsTrue(results.ContainsKey("tb_Transport_NPC_Pos"));
        Assert.IsTrue(results.ContainsKey("tb_UI_Img"));
        Assert.IsTrue(results.ContainsKey("tb_UI_PopUp"));
        Assert.IsTrue(results.ContainsKey("tb_UI_String"));
        Assert.IsTrue(results.ContainsKey("tb_Unity_Event"));
        Assert.IsTrue(results.ContainsKey("tb_VFX_BattleMaterial"));
        Assert.IsTrue(results.ContainsKey("tb_VFX_GroundMaterial"));
        Assert.IsTrue(results.ContainsKey("tb_Warlord_GUI"));
        Assert.IsTrue(results.ContainsKey("tb_Week_Day"));
        Assert.IsTrue(results.ContainsKey("tb_Week_Group"));
        Assert.IsTrue(results.ContainsKey("tb_Week_Mission"));
        Assert.IsTrue(results.ContainsKey("tb_world_event"));
        Assert.IsTrue(results.ContainsKey("tb_world_event_reward"));
    }
}
